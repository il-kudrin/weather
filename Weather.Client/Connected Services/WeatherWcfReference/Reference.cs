//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Weather.Client.WeatherWcfReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseResponse", Namespace="http://schemas.datacontract.org/2004/07/WcfWeatherService")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Weather.Client.WeatherWcfReference.GetWeaterResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Weather.Client.WeatherWcfReference.TomorrowCitiesRespinse))]
    public partial class BaseResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorDescriptionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string ErrorDescription {
            get {
                return this.ErrorDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorDescriptionField, value) != true)) {
                    this.ErrorDescriptionField = value;
                    this.RaisePropertyChanged("ErrorDescription");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetWeaterResponse", Namespace="http://schemas.datacontract.org/2004/07/WcfWeatherService")]
    [System.SerializableAttribute()]
    public partial class GetWeaterResponse : Weather.Client.WeatherWcfReference.BaseResponse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxTField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MinTField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CityName {
            get {
                return this.CityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CityNameField, value) != true)) {
                    this.CityNameField = value;
                    this.RaisePropertyChanged("CityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxT {
            get {
                return this.MaxTField;
            }
            set {
                if ((this.MaxTField.Equals(value) != true)) {
                    this.MaxTField = value;
                    this.RaisePropertyChanged("MaxT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MinT {
            get {
                return this.MinTField;
            }
            set {
                if ((this.MinTField.Equals(value) != true)) {
                    this.MinTField = value;
                    this.RaisePropertyChanged("MinT");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TomorrowCitiesRespinse", Namespace="http://schemas.datacontract.org/2004/07/WcfWeatherService")]
    [System.SerializableAttribute()]
    public partial class TomorrowCitiesRespinse : Weather.Client.WeatherWcfReference.BaseResponse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] CitiesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] Cities {
            get {
                return this.CitiesField;
            }
            set {
                if ((object.ReferenceEquals(this.CitiesField, value) != true)) {
                    this.CitiesField = value;
                    this.RaisePropertyChanged("Cities");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetWeaterRequest", Namespace="http://schemas.datacontract.org/2004/07/WcfWeatherService")]
    [System.SerializableAttribute()]
    public partial class GetWeaterRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CityName {
            get {
                return this.CityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CityNameField, value) != true)) {
                    this.CityNameField = value;
                    this.RaisePropertyChanged("CityName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WeatherWcfReference.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetCitiesForTomowow", ReplyAction="http://tempuri.org/IService/GetCitiesForTomowowResponse")]
        Weather.Client.WeatherWcfReference.TomorrowCitiesRespinse GetCitiesForTomowow();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetCitiesForTomowow", ReplyAction="http://tempuri.org/IService/GetCitiesForTomowowResponse")]
        System.Threading.Tasks.Task<Weather.Client.WeatherWcfReference.TomorrowCitiesRespinse> GetCitiesForTomowowAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetWeather", ReplyAction="http://tempuri.org/IService/GetWeatherResponse")]
        Weather.Client.WeatherWcfReference.GetWeaterResponse GetWeather(Weather.Client.WeatherWcfReference.GetWeaterRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetWeather", ReplyAction="http://tempuri.org/IService/GetWeatherResponse")]
        System.Threading.Tasks.Task<Weather.Client.WeatherWcfReference.GetWeaterResponse> GetWeatherAsync(Weather.Client.WeatherWcfReference.GetWeaterRequest request);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : Weather.Client.WeatherWcfReference.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<Weather.Client.WeatherWcfReference.IService>, Weather.Client.WeatherWcfReference.IService {
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Weather.Client.WeatherWcfReference.TomorrowCitiesRespinse GetCitiesForTomowow() {
            return base.Channel.GetCitiesForTomowow();
        }
        
        public System.Threading.Tasks.Task<Weather.Client.WeatherWcfReference.TomorrowCitiesRespinse> GetCitiesForTomowowAsync() {
            return base.Channel.GetCitiesForTomowowAsync();
        }
        
        public Weather.Client.WeatherWcfReference.GetWeaterResponse GetWeather(Weather.Client.WeatherWcfReference.GetWeaterRequest request) {
            return base.Channel.GetWeather(request);
        }
        
        public System.Threading.Tasks.Task<Weather.Client.WeatherWcfReference.GetWeaterResponse> GetWeatherAsync(Weather.Client.WeatherWcfReference.GetWeaterRequest request) {
            return base.Channel.GetWeatherAsync(request);
        }
    }
}
